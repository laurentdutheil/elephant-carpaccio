{{- /*gotype: elephant_carpaccio/http-server.GameBoard*/ -}}
{{template "top" .}}
<div class="container">
    <div class="row">
        <table class="one-quarter column">
            <caption>Discount</caption>
            <thead>
            <tr>
                <th>Order Value</th>
                <th>Discount Rate</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>$1.000</td>
                <td>3.00%</td>
            </tr>
            <tr>
                <td>$5.000</td>
                <td>5.00%</td>
            </tr>
            <tr>
                <td>$7.000</td>
                <td>7.00%</td>
            </tr>
            <tr>
                <td>$10.000</td>
                <td>10.00%</td>
            </tr>
            <tr>
                <td>$50.000</td>
                <td>15.00%</td>
            </tr>
            </tbody>
        </table>
        <table class="one-quarter column">
            <caption>Tax</caption>
            <thead>
            <tr>
                <th>State</th>
                <th>Tax</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>UT</td>
                <td>6.85%</td>
            </tr>
            <tr>
                <td>NV</td>
                <td>8.00%</td>
            </tr>
            <tr>
                <td>TX</td>
                <td>6.25%</td>
            </tr>
            <tr>
                <td>AL</td>
                <td>4.00%</td>
            </tr>
            <tr>
                <td>CA</td>
                <td>8.25%</td>
            </tr>
            </tbody>
        </table>
        <div class="one-half column">
            <canvas id="iterationScores"></canvas>
        </div>
    </div>
    <div class="row">
        <canvas id="qr"></canvas>
    </div>
</div>

<script src="/static/lib/chart.js"></script>
<script>

    const ctx = document.getElementById('iterationScores');

    chart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: ['IT0', 'IT1', 'IT2', 'IT3', 'IT4', 'IT5', 'IT6'],
            datasets: [
                {
                    label: 'ideal',
                    data: [0, 3, 9, 14, 17, 18, 19],
                    borderWidth: 1,
                    tension: 0.5,
                    borderDash: [10, 5]
                },
                {{range .Game.Teams}}
                {
                    label: '{{.Name}}',
                    data: [0{{range .IterationScores}},{{.}}{{end}}],
                    borderWidth: 1,
                    tension: 0.5
                },
                {{end}}
            ],
        },
        options: {
            aspectRatio: 1
        }
    });

    const es = new EventSource("/sse");
    es.onerror = (err) => {
        console.log("onerror", err)
        es.close()
    };

    es.addEventListener("score", (event) => {
        const parsedData = JSON.parse(event.data);
        const {teamName, newScore} = parsedData;

        chart.data.datasets
            .find((dataset) => dataset.label === teamName)
            .data.push(newScore)

        chart.update()
    });
    
</script>

<script src="/static/lib/qrious.min.js"></script>
<script>
    (function () {
        new QRious({
            element: document.getElementById('qr'),
            value: '{{.BaseURL}}/demo'
        });
    })();
</script>
{{template "footer" .}}